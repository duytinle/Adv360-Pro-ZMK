
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
         &kp ESCAPE           &kp N1               &kp N2    &kp N3     &kp N4    &kp N5                 &kp EXCL      &kp EQUAL         &kp N6     &kp N7     &kp N8            &kp N9     &kp N0  &kp BACKSLASH
            &kp TAB            &kp Q                &kp W     &kp E      &kp R     &kp T             &kp QUESTION      &kp LC(Z)          &kp Y      &kp U      &kp I             &kp O      &kp P      &kp MINUS
 &mt LCTRL CAPSLOCK            &kp A                &kp S     &kp D      &kp F     &kp G            &mt DQT COLON          &mo 2          &mo 1                         &mt LA(B) LA(Z)  &kp RCTRL   &kp QUESTION     &kp H      &kp J      &kp K    &kp L         &kp SEMI    &kp SQT
          &kp LSHFT            &kp Z                &kp X     &kp C      &kp V     &kp B                    &none          &none  &mt LALT HOME      &none      &none   &kp LC(LS(ESC))      &none          &none     &kp N      &kp M  &kp COMMA  &kp DOT  &mt LCTRL SLASH  &kp RSHFT
   &kp LEFT_CONTROL  &mt LC(A) LC(C)  &mt LC(LS(V)) LC(V)  &kp LEFT  &kp RIGHT  &kp BSPC                  &kp DEL  &mt LC(X) END          &mo 3  &kp ENTER  &kp SPACE  &kp LEFT_BRACKET   &kp DOWN         &kp UP  &kp RBKT  &kp ENTER
            >;
        };

        layer_keypad {
            bindings = <
         &kp LG(LA(B))          &kp N1          &kp N2          &kp N3          &kp N4          &kp N5             &trans    &none      &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
     &kp LG(LC(LS(B)))           &kp Q           &kp W           &kp E           &kp R           &kp T              &none    &none      &none   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
 &mt LEFT_CONTROL CAPS  &kp LC(LS(N1))  &kp LC(LS(N2))  &kp LC(LS(N3))  &kp LC(LS(N4))  &kp LC(LS(N5))              &none    &mo 2      &mo 1                                 &kp LGUI        &kp RCTRL       &none     &none  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
             &kp LSHFT           &kp Z           &kp X           &kp C       &kp PG_DN       &kp PG_UP              &none    &none   &kp HOME       &none         &none      &kp PG_UP            &none       &none     &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
             &kp LCTRL      &kp K_COPY     &kp K_PASTE        &kp LEFT       &kp RIGHT        &kp BSPC            &kp DEL  &kp END  &kp PG_DN   &kp ENTER     &kp KP_N0         &kp UP         &kp DOWN  &kp KP_DOT  &kp RBKT      &none
            >;
        };

        layer_fn {
            bindings = <
     &kp LG(LA(B))             &kp F1           &kp F2          &kp F3         &kp F4     &kp F5                      &tog 3   &mo 0  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
 &kp LG(LC(LS(B)))             &trans        &kp LC(Y)       &kp LC(E)      &kp LC(R)  &kp LC(L)            &kp LC(LS(HOME))   &none  &trans  &trans  &trans  &trans   &trans  &kp F12
             &none  &kp LC(LS(COMMA))  &kp LC(LS(DOT))       &kp LC(J)  &kp LA(LC(F))  &kp LC(U)             &kp LC(LS(END))  &trans  &trans                  &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
         &kp LSHFT             &trans           &trans  &kp LC(LS(N8))      &kp LC(I)  &kp LC(B)                       &none   &none  &trans   &none   &none  &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
            &trans             &trans           &trans        &kp HOME        &kp END     &trans                      &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
